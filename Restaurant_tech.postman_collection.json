{
	"info": {
		"_postman_id": "225342a4-9118-4b85-8682-249054164b78",
		"name": "Restaurant_tech",
		"description": "‚öôÔ∏è Vis√£o Geral  \nO arquivo Restaurant_tech.postman_collection.json √© uma cole√ß√£o de testes de API.  \nEle organiza endpoints da API REST de usu√°rios em um fluxo que simula a jornada completa de uso:\n\n1. Cria um usu√°rio\n    \n2. Faz login com ele\n    \n3. Executa opera√ß√µes v√°lidas (GET, LIST, UPDATE, CHANGE, DELETE)\n    \n4. Executa testes de erro (404, 400, 500)\n    \n\nEsse tipo de fluxo √© t√≠pico de um teste de integra√ß√£o funcional, onde se valida o comportamento do sistema do in√≠cio ao fim.\n\nStartFragment\n\n## üß≠ üîÅ Fluxo de Execu√ß√£o no Postman (passo a passo)\n\n1. **Execute ‚ÄúCreateUsuario‚Äù** ‚Üí Cria o usu√°rio.\n    \n2. **Execute ‚Äúlogin‚Äù** ‚Üí Gera e salva o token JWT.\n    \n3. **V√° para a pasta ‚Äú200‚Äù e execute, nessa ordem:**\n    \n    1. H√° necessidade adicionar o Token gerado no passo 2 em Authorization Bearer Token:\n        \n        1. GetUsuario\n            \n        2. ListUsuario\n            \n        3. UpdateUsuario\n            \n        4. ChangeUsuario\n            \n        5. DeleteUsuario\n            \n4. **V√° para a pasta ‚Äú404‚Äù** e execute `erro404`\n    \n5. **V√° para a pasta ‚Äú400‚Äù** e execute `erro400`\n    \n6. **V√° para a pasta ‚Äú500‚Äù** e execute `erro500`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32979420"
	},
	"item": [
		{
			"name": "Usuario",
			"item": [
				{
					"name": "login",
					"item": [
						{
							"name": "login",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"lcamoes\",\r\n    \"senha\": \"senha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateUsuario",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"Luiz de Camoes\",\n    \"username\": \"lcamoes\",\n    \"senha\": \"senha123\",\n    \"email\": \"lcamoes@exemplo.com\",\n    \"regras\": 0,\n    \"endereco\": {\n        \"CEP\": \"13216500\",\n        \"logradouro\": \"Rua Pernambuco\",\n        \"bairro\": \"Jd. Taruma\",\n        \"cidade\": \"Jundiai\"\n    },\n    \"numero\": 332\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/create",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"create"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						}
					]
				},
				{
					"name": "200",
					"item": [
						{
							"name": "GetUsuario",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/search/lcamoes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"search",
										"lcamoes"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "ListUsuario",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJyZXN0YXVyYW50Iiwic3ViIjoib2RhcHRlciIsImV4cCI6MTc2MDg0NjgwN30.XoyoyZnR4e-mkeZQCXSNKCswR7HQbbzEjY0t5bZy_D4",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/list/number/1/page/9",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"list",
										"number",
										"1",
										"page",
										"9"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateUsuario",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"Luiz de Camoes\",\n    \"username\": \"lcamoes\",\n    \"email\": \"lcamoes@exemplo.com\",\n    \"regras\": 1,\n    \"endereco\": {\n        \"CEP\": \"13216500\",\n        \"logradouro\": \"Rua Pernambuco\",\n        \"bairro\": \"Jd. Taruma\",\n        \"cidade\": \"Jundiai\"\n    },\n    \"numero\": 332\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/lcamoes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"lcamoes"
									]
								},
								"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
							},
							"response": []
						},
						{
							"name": "DeleteUsuario",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/delete/lcamoes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"delete",
										"lcamoes"
									]
								},
								"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
							},
							"response": []
						},
						{
							"name": "ChangeUsuario",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"lcamoes\",\r\n    \"senha\": \"senhaCriada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/reset",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"reset"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "404",
					"item": [
						{
							"name": "erro404",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/searc/lcamoes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"searc",
										"lcamoes"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "400",
					"item": [
						{
							"name": "erro400",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"Luiz de Camoes\",\n    \"username\": \"lcamoes\",\n    \"senha\": \"senha123\",\n    \"email\": \"\",\n    \"regras\": 0,\n    \"endereco\": {\n        \"CEP\": \"13216500\",\n        \"logradouro\": \"Rua Pernambuco\",\n        \"bairro\": \"Jd. Taruma\",\n        \"cidade\": \"Jundiai\"\n    },\n    \"numero\": 332\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/create",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"create"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "500",
					"item": [
						{
							"name": "erro500",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJyZXN0YXVyYW50Iiwic3ViIjoibGNhbW9lcyIsImV4cCI6MTc1OTE2NDA5Nn0.E2njSn16DWALxeZ9Me6EUrvb3J2j6GXSBP6gNMIF7kU",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/api/v1/usuario/search/lcamoes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"api",
										"v1",
										"usuario",
										"search",
										"lcamoes"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://template.postman-echo.com"
		}
	]
}